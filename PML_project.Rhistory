library(caret)
training =read.csv("C:\\Users\\Administrator\\Desktop\\pml-training.csv")
testing =read.csv("C:\\Users\\Administrator\\Desktop\\pml-testing.csv")

### Data Cleaning with useless columns
training1 = training[,-c(1:5,12:36, 50:59, 69:83,87:101,103:112,125:139,141:150)]
testing1 = testing[,-c(1:5,12:36, 50:59, 69:83,87:101,103:112,125:139,141:150)]
set.seed(1234)

### Creat random 12 subsets for pre-test model. You can speed up later by split more subsets for building model
folds<-createFolds(y=training1$classe,k=12,list=TRUE,returnTrain=FALSE)

### Use subset 1 for pre-screening model from rf, gbm, rpart, and lda.
training1_1<-training1[folds$Fold01,]
modFit1_1_rf<- train(classe~., data=training1_1, method = "rf", prox = TRUE)
modFit1_1_gbm<- train(classe~., data=training1_1, method = "gbm",  verbose = FALSE)
modFit1_1_rpart<-train(classe~., data=training1_1, method = "rpart")
modFit1_1_lda<- train(classe~., data=training1_1, method = "lda")

confusionMatrix(training1_1$classe,predict(modFit1_1_rf,training1_1))$overall[1]
# Accuracy 1
confusionMatrix(training1_1$classe,predict(modFit1_1_gbm,training1_1))$overall[1]
# Accuracy 0.999388 
confusionMatrix(training1_1$classe,predict(modFit1_1_lda,training1_1))$overall[1]
# Accuracy 0.7276622
confusionMatrix(training1_1$classe,predict(modFit1_1_rpart,training1_1))$overall[1]
# Accuracy 0.5691554
#-- rf&gbm ran far more better than lda and rpart

### Use subset 2 & 3 & 4 for further-comparint models between rf and gbm
training1_2<-training1[folds$Fold02,]
modFit1_2_rf<- train(classe~., data=training1_2, method = "rf", prox = TRUE)
modFit1_2_gbm<- train(classe~., data=training1_2, method = "gbm",  verbose = FALSE)
confusionMatrix(training1_2$classe,predict(modFit1_2_rf,training1_2))$overall[1]
# Accuracy 1  
confusionMatrix(training1_2$classe,predict(modFit1_2_gbm,training1_2))$overall[1]
# Accuracy 0.9993884

training1_3<-training1[folds$Fold03,]
confusionMatrix(training1_3$classe,predict(modFit1_1_rf,training1_3))$overall[1] 
# Accuracy 0.959633  
confusionMatrix(training1_3$classe,predict(modFit1_1_gbm,training1_3))$overall[1] 
# Accuracy 0.9529052

training1_4<-training1[folds$Fold04,]
confusionMatrix(training1_4$classe,predict(modFit1_1_rf,training1_4))$overall[1]  
# Accuracy 0.9614679 
confusionMatrix(training1_4$classe,predict(modFit1_1_gbm,training1_4))$overall[1]
# Accuracy 0.941896  
#- rf ran a little bit better than gbm


### Finally, predict test by rf model
predict(modFit1_1_rf,testing1) 
# [1] B A B A A E D B A A C C B A E E A B B B
# Levels: A B C D E
